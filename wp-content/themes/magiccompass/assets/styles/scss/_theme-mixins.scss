/********************
 1.BUTTONS
 ********************/
@mixin btn-color ($border-color, $background-color, $color) {
    border-color: $border-color;
    background-color: $background-color;
    color: $color;
}

@mixin btn-color-scheme ($color) {
    $hover-color: null;
    $disabled-color: null;
    $txt-color: null;
    $txt-disabled-color: null;

    @if (lightness($color) < 10) {
        $hover-color: lighten($color, 5%);
        $disabled-color: lighten(desaturate( $color, 30% ), 7%);
    } @else {
        $disabled-color: desaturate( $color, 30% );
        $hover-color: darken($color, 10%);
    }

    @if (lightness($color) > 70) {
        $txt-color: $color-gray-90;
        $txt-disabled-color: $color-gray-70;
    } @else {
        $txt-color: $white;
        $txt-disabled-color: $color-gray-10;
    }

    @include btn-color($color, $color, $txt-color);

    &:hover {
        @include btn-color($hover-color, $hover-color, $txt-color);
    }
    &.hvr-invert {
        &:hover {
            @include btn-color($color, transparent, $color);
        }
    }

    &.type-hollow {
        @include btn-color($color, transparent, $color);
        &:hover {
            @include btn-color($hover-color, transparent, $hover-color);
        }
        &.hvr-invert {
            &:hover {
                @include btn-color($color, $color, $txt-color);
            }
        }
    }

    &[disabled], &.disabled {
        @include btn-color(
            $disabled-color,
            $disabled-color,
            $txt-disabled-color
        );

        &:hover {
            @include btn-color($disabled-color, $disabled-color, $txt-disabled-color);
        }
        &.hvr-invert {
            &:hover {
                @include btn-color($disabled-color, $disabled-color, $txt-disabled-color);
            }
        }

        &.type-hollow {
            @include btn-color($disabled-color, rgba( $disabled-color, .05 ), $disabled-color);
            &:hover {
                @include btn-color($disabled-color, rgba( $disabled-color, .05 ), $disabled-color);
            }
            &.hvr-invert {
                &:hover {
                    @include btn-color($disabled-color, rgba( $disabled-color, .05 ), $disabled-color);
                }
            }
        }
    }
}

@mixin btn-color-scheme-hvr ($color) {
    $hover-color: null;
    $txt-color: null;

    @if (lightness($color) < 10) {
        $hover-color: lighten($color, 5%);
    } @else {
        $hover-color: darken($color, 10%);
    }

    @if (lightness($color) > 70) {
        $txt-color: $black;
    } @else {
        $txt-color: $white;
    }

    &:hover {
        @include btn-color($color, $color, $txt-color);
    }
    &.hvr-invert {
        &:hover {
            @include btn-color($color, transparent, $color);
        }
    }

    &.type-hollow {
        &:hover {
            @include btn-color($color, transparent, $color);
        }
        &.hvr-invert {
            &:hover {
                @include btn-color($color, $color, $txt-color);
            }
        }
    }
}

/********************
 1.ICONS
 ********************/
@mixin icon-color ($border-color, $background-color, $color) {
    color: $color;
    &:before {
        border-color: $border-color;
        background-color: $background-color;
    }
}

@mixin icon-color-scheme ($color) {
    $hover-color: null;
    $txt-color: null;

    @if (lightness($color) < 10) {
        $hover-color: lighten($color, 10%);
    } @else {
        $hover-color: darken($color, 10%);
    }

    @if (lightness($color) > 60) {
        $txt-color: $black;
    } @else {
        $txt-color: $white;
    }

    @include icon-color(transparent, transparent, $color);

    &:hover {
        @include icon-color(transparent, transparent, $hover-color);
    }

    &.type-bg, &.icon-bg {
        @include icon-color($color, $color, $txt-color);

        &:hover {
            @include icon-color($hover-color, $hover-color, $txt-color);
        }
        &.hvr-invert {
            &:hover {
                @include icon-color($color, transparent, $color);
            }
        }
    }

    &.type-hollow, &.icon-hollow {
        @include icon-color($color, transparent, $color);
        &:hover {
            @include icon-color($hover-color, transparent, $hover-color);
        }
        &.hvr-invert {
            &:hover {
                @include icon-color($color, $color, $txt-color);
            }
        }
    }
}

@mixin icon-color-scheme-hvr ($color) {
    $hover-color: null;
    $txt-color: null;

    @if (lightness($color) < 10) {
        $hover-color: lighten($color, 10%);
    } @else {
        $hover-color: darken($color, 10%);
    }

    @if (lightness($color) > 60) {
        $txt-color: $black;
    } @else {
        $txt-color: $white;
    }

    &:hover {
        color: $color;
    }

    &.type-bg, &.icon-bg {
        &:hover {
            border-color: $color;
            background-color: $color;
            color: $txt-color;
        }
        &.hvr-invert {
            &:hover {
                border-color: $color;
                background-color: transparent;
                color: $color;
            }
        }
    }

    &.type-hollow, &.icon-hollow {
        &:hover {
            border-color: $color;
            background-color: transparent;
            color: $color;
        }
        &.hvr-invert {
            &:hover {
                border-color: $color;
                background-color: $color;
                color: $txt-color;
            }
        }
    }
}